@use "../index" as *;

* {
  box-sizing: border-box;
}

body {
  background-color: #f8f7f7;
}

.duration-select {
  display: flex;
  margin-bottom: 15px;
}

.duration-select__title {
  font-style: normal;
  font-weight: bold;
  &::after {
    margin-left: 1em;
    content: "â‰«";
  }
}

.duration-select__list {
  margin: 0;
  padding: 0;
  list-style: none inside;
  display: flex;
}

.duration-select__button {
  cursor: pointer;
  margin-left: 1em;
  padding: 8px 10px;
  border: 1px solid rgba(#000, 0.15);
  border-radius: 2px;
  background-color: rgba(#a4c6d6, 0.5);

  #d1:checked ~ .main &[for="d1"] {
    background-color: rgba(#f78eb2, 0.5);
  }
  #d2:checked ~ .main &[for="d2"] {
    background-color: rgba(#f78eb2, 0.5);
  }
  #d3:checked ~ .main &[for="d3"] {
    background-color: rgba(#f78eb2, 0.5);
  }
}

.test-container {
  $gap: 15px;
  $col: 3;
  display: grid;
  grid-template-columns: repeat(
    auto-fill,
    minmax(calc((100% / #{$col}) - #{$gap} * (#{$col} - 1)), 1fr)
  );
  grid-column-gap: $gap;
  grid-row-gap: $gap;
}

.test-container__item {
  padding: 12px;
  border: 1px solid rgba(#000, 0.15);
  border-radius: 2px;
}

.test-container__title {
  margin: 0 0 10px;
  line-height: 1;
}

.box {
  cursor: pointer;
  width: 100%;
  height: 30px;
  background-color: #a4c6d6;
}

.line {
  width: 100%;
  height: 100%;
  background-color: #f78eb2;
  transform-origin: 0 0;
  transform: scaleX(0);
  transition-property: transform;
  transition-duration: 0.5s;

  #d1:checked ~ .main & {
    transition-duration: 0.5s;
  }
  #d2:checked ~ .main & {
    transition-duration: 1s;
  }
  #d3:checked ~ .main & {
    transition-duration: 3s;
  }

  .box:hover & {
    transform: scaleX(1);
  }
}

.is-easeInSine {
  transition-timing-function: easing(easeInSine);
}
.is-easeOutSine {
  transition-timing-function: easing(easeOutSine);
}
.is-easeInOutSine {
  transition-timing-function: easing(easeInOutSine);
}
.is-easeInQuad {
  transition-timing-function: easing(easeInQuad);
}
.is-easeOutQuad {
  transition-timing-function: easing(easeOutQuad);
}
.is-easeInOutQuad {
  transition-timing-function: easing(easeInOutQuad);
}
.is-easeInCubic {
  transition-timing-function: easing(easeInCubic);
}
.is-easeOutCubic {
  transition-timing-function: easing(easeOutCubic);
}
.is-easeInOutCubic {
  transition-timing-function: easing(easeInOutCubic);
}
.is-easeInQuart {
  transition-timing-function: easing(easeInQuart);
}
.is-easeOutQuart {
  transition-timing-function: easing(easeOutQuart);
}
.is-easeInOutQuart {
  transition-timing-function: easing(easeInOutQuart);
}
.is-easeInQuint {
  transition-timing-function: easing(easeInQuint);
}
.is-easeOutQuint {
  transition-timing-function: easing(easeOutQuint);
}
.is-easeInOutQuint {
  transition-timing-function: easing(easeInOutQuint);
}
.is-easeInExpo {
  transition-timing-function: easing(easeInExpo);
}
.is-easeOutExpo {
  transition-timing-function: easing(easeOutExpo);
}
.is-easeInOutExpo {
  transition-timing-function: easing(easeInOutExpo);
}
.is-easeInCirc {
  transition-timing-function: easing(easeInCirc);
}
.is-easeOutCirc {
  transition-timing-function: easing(easeOutCirc);
}
.is-easeInOutCirc {
  transition-timing-function: easing(easeInOutCirc);
}
.is-easeInBack {
  transition-timing-function: easing(easeInBack);
}
.is-easeOutBack {
  transition-timing-function: easing(easeOutBack);
}
.is-easeInOutBack {
  transition-timing-function: easing(easeInOutBack);
}
